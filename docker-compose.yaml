version: "3"
services:
  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    profiles:
      - all
      - db
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - db-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    logging:
      driver: none
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
    profiles:
      - all
      - db
    depends_on:
      - db
    ports:
      - "${PGADMIN_PORT}:${PGADMIN_PORT}"

  harvester:
    build:
      context: ./harvester
      dockerfile: Dockerfile
    volumes:
      - ./harvester:/app/src
    ports:
      - "${HARVESTER_PORT}:${HARVESTER_PORT}"
    depends_on:
      - db
    profiles:
      - all
      - services
    env_file: 
      - ./harvester/.env
    environment:
      PROCESSOR_URL: http://processor
      PROCESSOR_PORT: ${PROCESSOR_PORT}
      POSTGRES_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      AUTH_TOKEN: ${AUTH_TOKEN}
      IR_PORT: ${IR_PORT}
      IR_URL: http://image-recognition
  
  processor:
    build:
      context: ./processor
      dockerfile: Dockerfile
    volumes:
      - ./processor:/app/src
    ports:
      - "${PROCESSOR_PORT}:${PROCESSOR_PORT}"
    depends_on:
      - db
    profiles:
      - all
      - services
    env_file: 
      - ./processor/.env
    environment:
      HARVESTER_URL: http://harvester
      HARVESTER_PORT: ${HARVESTER_PORT}
      POSTGRES_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      AUTH_TOKEN: ${AUTH_TOKEN}
      PROCESSOR_PORT: ${PROCESSOR_PORT}
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
      LANGSMITH_PROJECT_NAME: ${LANGSMITH_PROJECT_NAME}

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NITRO_PORT=${NITRO_PORT}
        - NITRO_HOST=${NITRO_HOST}
    volumes:
      - ./frontend:/app/src
    ports:
      - "${NITRO_PORT}:${NITRO_PORT}"
    depends_on:
      - db
    profiles:
      - all
      - services
    env_file: 
      - ./frontend/.env
    environment:
      NITRO_PORT: ${NITRO_PORT}
      NITRO_HOST: ${NITRO_HOST}
      AUTH_TOKEN: ${AUTH_TOKEN}
      NUXT_POSTGRES_HOST: db
      NUXT_POSTGRES_USER: ${POSTGRES_USER}
      NUXT_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NUXT_POSTGRES_DB: ${POSTGRES_DB}
      NUXT_POSTGRES_PORT: ${POSTGRES_PORT}
  
  scheduler:
    build:
      context: ./scheduler
      dockerfile: Dockerfile
    volumes:
      - ./scheduler:/app/src
    ports:
      - "${SCHEDULER_PORT}:${SCHEDULER_PORT}"
    depends_on:
      - db
    profiles:
      - all
      - services
    env_file: 
      - ./scheduler/.env
    environment:
      SCHEDULER_PORT: ${SCHEDULER_PORT}
      AUTH_TOKEN: ${AUTH_TOKEN}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: db
      HARVESTER_URL: http://harvester
      HARVESTER_PORT: ${HARVESTER_PORT}
      PROCESSOR_URL: http://processor
      PROCESSOR_PORT: ${PROCESSOR_PORT}
  
  image-recognition:
    build:
      context: ./image-recognition-${IR_VERSION}
      dockerfile: ./docker/${IR_ENVIRONMENT}/Dockerfile
    volumes:
      - ./image-recognition-${IR_VERSION}:/app/src
    ports:
      - "${IR_PORT}:${IR_PORT}"
    profiles:
      - all
      - ml
    env_file: 
      - ./image-recognition-${IR_VERSION}/.env
    environment:
      IR_PORT: ${IR_PORT}
      IR_URL: ${IR_URL}
      AUTH_TOKEN: ${AUTH_TOKEN}
      IR_ENVIRONMENT: ${IR_ENVIRONMENT}
      IR_VERSION: ${IR_VERSION}

volumes:
  db-data: